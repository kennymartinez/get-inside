---
import { getCollection } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import Section from "~/components/Section.astro";
import Container from "~/components/Container.astro";
import Heading from "~/components/Heading.astro";
import { colombianRegions } from "~/data/config";

const allTours = await getCollection("tours", ({ data }) => !data.misc?.hidden);
const uniqueDestinations = [
  ...new Set(allTours.map((tour) => tour.data.general.destination)),
];
uniqueDestinations.sort((a, b) => a.localeCompare(b));

// Group destinations by Colombian regions
const groupedDestinations: Record<string, string[]> = {};

// Initialize regions
Object.entries(colombianRegions).forEach(([regionKey, regionData]) => {
  groupedDestinations[regionData.name] = [];
});

// Categorize destinations
uniqueDestinations.forEach((destination) => {
  let assigned = false;

  Object.entries(colombianRegions).forEach(([regionKey, regionData]) => {
    if (regionData.destinations.includes(destination)) {
      groupedDestinations[regionData.name].push(destination);
      assigned = true;
    }
  });

  // If destination doesn't fit any region, add to "Other"
  if (!assigned) {
    if (!groupedDestinations["Other"]) {
      groupedDestinations["Other"] = [];
    }
    groupedDestinations["Other"].push(destination);
  }
});

// Remove empty regions
Object.keys(groupedDestinations).forEach((region) => {
  if (groupedDestinations[region].length === 0) {
    delete groupedDestinations[region];
  }
});
---

<Layout
  pageTitle="Destinations"
  description="Explore Colombia's diverse destinations and regions."
>
  <Section class:list={"bg-white"}>
    <Container class:list={"max-w-4xl"}>
      <Heading>
        <h1 slot="heading-title">Colombian Destinations</h1>
        <p class="-mb-16" slot="heading-content">
          Discover Colombia's incredible diversity - from Caribbean beaches to
          Amazon rainforest, Andean mountains to Pacific coast. Each destination
          offers unique adventures and cultural experiences.
        </p>
      </Heading>
    </Container>
  </Section>

  <Section class:list={"bg-gray-50"}>
    <Container class:list={"max-w-4xl"}>
      {
        Object.keys(groupedDestinations).length > 0 ? (
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {Object.entries(groupedDestinations).map(
              ([region, destinations]) => (
                <div class="bg-white rounded-lg shadow-md border border-gray-100 p-6">
                  <h2 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                    <span class="mr-2">üó∫Ô∏è</span>
                    {region}
                  </h2>
                  <ul class="space-y-2">
                    {destinations.map((destination) => {
                      const tourCount = allTours.filter(
                        (tour) => tour.data.general.destination === destination
                      ).length;
                      return (
                        <li>
                          <a
                            href={`/tours/?destination=${encodeURIComponent(destination)}`}
                            class="flex items-center justify-between py-2 px-3 rounded-md hover:bg-gray-50 transition-colors"
                          >
                            <span class="font-medium text-gray-700">
                              {destination}
                            </span>
                            <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
                              {tourCount} tour{tourCount !== 1 ? "s" : ""}
                            </span>
                          </a>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              )
            )}
          </div>
        ) : (
          <div class="text-center py-12">
            <div class="text-6xl mb-4">üåé</div>
            <p class="text-gray-500">
              No destinations available at the moment. Please check back later.
            </p>
          </div>
        )
      }
    </Container>
  </Section>
</Layout>
