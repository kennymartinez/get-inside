---
import type { FilterBarMobileProps as Props } from "~/types";
import Container from "~/components/Container.astro";
import SortMedicalMobile from "~/components/forms/SortMedicalMobile.astro";
import ButtonFilterMobile from "~/components/buttons/ButtonFilterMobile.astro";
import PresetBar from "~/components/PresetBar.astro";

const { params } = Astro.props;
---

<Container class:list={"lg:hidden bg-gray-800 pt-0 pb-0"}>
  <div class="text-white w-full flex items-center justify-between py-2 gap-x-4">
    <ButtonFilterMobile />

    <!-- Presets -->
    <div
      id="preset-bar-mobile"
      class="text-white grow overflow-x-auto text-center whitespace-nowrap relative"
      style="scrollbar-width: none; -webkit-overflow-scrolling: touch;"
    >
      <PresetBar params={params} />

      <div class="absolute pointer-events-none inset-0">
        <div
          class="bg-gradient-to-r from-transparent to-gray-800 w-8 h-full ml-auto"
        >
        </div>
      </div>
    </div>

    <!-- Sort -->
    <SortMedicalMobile />
  </div>
</Container>

<script>
  document.addEventListener("astro:page-load", function () {
    const presetBarMobile = document.getElementById("preset-bar-mobile");
    if (presetBarMobile) {
      // Handle preset removal buttons
      const removeButtons = presetBarMobile.querySelectorAll("[class*='preset-remove-']");
      removeButtons.forEach((button) => {
        button.addEventListener("click", (event) => {
          event.preventDefault();
          const className = Array.from(button.classList).find(cls => cls.startsWith("preset-remove-"));
          if (className) {
            const paramName = className.replace("preset-remove-", "");
            const url = new URL(window.location.href);
            url.searchParams.delete(paramName);
            if (url.searchParams.has("page")) {
              url.searchParams.delete("page");
            }
            window.location.href = url.toString();
          }
        });
      });
    }
  });
</script>
