---
import type { MedicalFilterData } from "~/types";
import Icon from "~/components/Icon.astro";

interface Props {
  data: MedicalFilterData;
}

const { data } = Astro.props;
---

<aside class="hidden lg:block w-80 shrink-0">
  <div class="bg-white shadow-sm border border-gray-200 rounded-lg">
    <div class="px-6 py-4 border-b border-gray-200">
      <h2 class="text-lg font-semibold text-gray-900">🔍 Find Specialists</h2>
    </div>

    <form
      method="get"
      action="/medical/specialists/1"
      class="p-6 space-y-6"
      id="medical-filter-form"
    >
      <!-- SPECIALTY FILTER -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="specialty" class="text-sm font-medium text-gray-700"
            >🏥 Specialty</label
          >
          <button id="clear-input-specialty" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <div class="grid grid-cols-1">
          <select
            name="specialty"
            id="specialty"
            class="appearance-none col-start-1 row-start-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="all">All Specialties</option>
            {
              data.specialties.map((specialty) => (
                <option value={specialty}>{specialty}</option>
              ))
            }
          </select>
          <Icon name="chevron-down" class="icon-chevron-down" />
        </div>
      </div>

      <!-- CITY FILTER -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="city" class="text-sm font-medium text-gray-700"
            >📍 City</label
          >
          <button id="clear-input-city" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <div class="grid grid-cols-1">
          <select
            name="city"
            id="city"
            class="appearance-none col-start-1 row-start-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="all">All Cities</option>
            {data.cities.map((city) => <option value={city}>{city}</option>)}
          </select>
          <Icon name="chevron-down" class="icon-chevron-down" />
        </div>
      </div>

      <!-- PROCEDURE FILTER -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="procedure" class="text-sm font-medium text-gray-700"
            >🔬 Procedure</label
          >
          <button id="clear-input-procedure" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <div class="grid grid-cols-1">
          <select
            name="procedure"
            id="procedure"
            class="appearance-none col-start-1 row-start-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="all">All Procedures</option>
            {
              data.procedures
                .slice(0, 20)
                .map((procedure) => (
                  <option value={procedure}>{procedure}</option>
                ))
            }
          </select>
          <Icon name="chevron-down" class="icon-chevron-down" />
        </div>
      </div>

      <!-- LANGUAGE FILTER -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="language" class="text-sm font-medium text-gray-700"
            >🗣️ Language</label
          >
          <button id="clear-input-language" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <div class="grid grid-cols-1">
          <select
            name="language"
            id="language"
            class="appearance-none col-start-1 row-start-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="all">Any Language</option>
            {
              data.languages.map((language) => (
                <option value={language}>{language}</option>
              ))
            }
          </select>
          <Icon name="chevron-down" class="icon-chevron-down" />
        </div>
      </div>

      <!-- EXPERIENCE FILTER -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="experience" class="text-sm font-medium text-gray-700"
            >⏱️ Experience</label
          >
          <button id="clear-input-experience" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <div class="grid grid-cols-1">
          <select
            name="experience"
            id="experience"
            class="appearance-none col-start-1 row-start-1 block w-full rounded-md border-gray-300 py-2 pl-3 pr-10 text-base focus:border-blue-500 focus:ring-blue-500"
          >
            <option value="all">Any Experience</option>
            <option value="1-5">1-5 years</option>
            <option value="6-10">6-10 years</option>
            <option value="11-15">11-15 years</option>
            <option value="16+">16+ years</option>
          </select>
          <Icon name="chevron-down" class="icon-chevron-down" />
        </div>
      </div>

      <!-- SEARCH TEXT -->
      <div>
        <div class="flex items-center gap-x-2">
          <label for="search" class="text-sm font-medium text-gray-700"
            >🔍 Search</label
          >
          <button id="clear-input-search" type="button" class="hidden">
            <Icon
              name="refresh"
              class="size-3 -mt-px text-gray-400 hover:text-gray-600"
            />
          </button>
        </div>
        <input
          type="text"
          name="search"
          id="search"
          placeholder="Doctor name, procedure, clinic..."
          class="block w-full rounded-md border-gray-300 py-2 pl-3 pr-3 text-base focus:border-blue-500 focus:ring-blue-500"
        />
      </div>

      <!-- SEARCH BUTTON -->
      <div class="sticky bottom-0 pt-4 border-t border-gray-200">
        <button
          type="submit"
          class="button button-black w-full flex items-center justify-center"
        >
          <span>🔍 Search Specialists</span>
          <span id="filter-result-found" class="ml-2 font-medium"
            >({data.count})</span
          >
        </button>

        <!-- Quick Reset -->
        <button
          type="button"
          id="clear-all-filters"
          class="w-full mt-2 text-sm text-gray-500 hover:text-gray-700 underline"
        >
          Clear All Filters
        </button>
      </div>
    </form>

    <!-- QUICK FILTER PRESETS -->
    <div class="border-t border-gray-200 pt-4 px-6 pb-6">
      <h3 class="text-sm font-medium text-gray-700 mb-3">Popular Searches</h3>
      <div class="flex flex-wrap gap-2">
        <button
          type="button"
          class="preset-filter inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 hover:bg-blue-100 hover:text-blue-800"
          data-preset="cosmetic"
        >
          ✨ Cosmetic Surgery
        </button>
        <button
          type="button"
          class="preset-filter inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-800"
          data-preset="dentistry"
        >
          🦷 Dentistry
        </button>
        <button
          type="button"
          class="preset-filter inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 hover:bg-purple-100 hover:text-purple-800"
          data-preset="bariatric"
        >
          ⚖️ Weight Loss
        </button>
        <button
          type="button"
          class="preset-filter inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 hover:bg-yellow-100 hover:text-yellow-800"
          data-preset="medellin"
        >
          🏙️ Medellín
        </button>
        <button
          type="button"
          class="preset-filter inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 hover:bg-red-100 hover:text-red-800"
          data-preset="featured"
        >
          ⭐ Featured
        </button>
      </div>
    </div>
  </div>
</aside>

<script>
  document.addEventListener("astro:page-load", function () {
    const form = document.getElementById("medical-filter-form");
    if (!form) return;

    // Populate form with current URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const formInputs = form.querySelectorAll("input, select");

    formInputs.forEach((input) => {
      const param = urlParams.get(input.name);
      if (param) {
        input.value = param;

        // Show clear button for non-"all" values
        if (param !== "all" && param !== "") {
          const clearButton = form.querySelector(`#clear-input-${input.name}`);
          if (clearButton) {
            clearButton.classList.remove("hidden");
          }
        }
      }
    });

    // Clear individual filters
    const clearButtons = form.querySelectorAll("[id^='clear-input-']");
    clearButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const inputName = button.id.replace("clear-input-", "");
        const input = form.querySelector(`[name="${inputName}"]`);
        if (input) {
          if (input.tagName === "SELECT") {
            input.value = "all";
          } else {
            input.value = "";
          }
          button.classList.add("hidden");
          form.submit();
        }
      });
    });

    // Clear all filters
    const clearAllButton = form.querySelector("#clear-all-filters");
    if (clearAllButton) {
      clearAllButton.addEventListener("click", () => {
        window.location.href = "/medical/specialists/1";
      });
    }

    // Handle preset filters
    const presetButtons = form.querySelectorAll(".preset-filter");
    presetButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const preset = button.getAttribute("data-preset");

        // Clear all filters first
        formInputs.forEach((input) => {
          if (input.tagName === "SELECT") {
            input.value = "all";
          } else {
            input.value = "";
          }
        });

        // Apply preset filters
        switch (preset) {
          case "cosmetic":
            form.querySelector('[name="specialty"]').value = "Cosmetic Surgery";
            break;
          case "dentistry":
            form.querySelector('[name="specialty"]').value = "Dentistry";
            break;
          case "bariatric":
            form.querySelector('[name="specialty"]').value =
              "Bariatric Surgery";
            break;
          case "medellin":
            form.querySelector('[name="city"]').value = "Medellín";
            break;
          case "featured":
            form.querySelector('[name="sort"]').value = "featured-desc";
            break;
        }

        form.submit();
      });
    });

    // Show/hide clear buttons on input change
    formInputs.forEach((input) => {
      input.addEventListener("change", () => {
        const clearButton = form.querySelector(`#clear-input-${input.name}`);
        if (clearButton) {
          if (input.value && input.value !== "all") {
            clearButton.classList.remove("hidden");
          } else {
            clearButton.classList.add("hidden");
          }
        }
      });
    });
  });
</script>
