---
import { getDestinations, getTourTypes } from "~/utils/tourism-helpers";
import Icon from "~/components/Icon.astro";

const destinations = await getDestinations();
const tourTypes = await getTourTypes();
---

<form
  id="form-widget-search"
  action="/tours/1"
  method="get"
  class="grid grid-cols-2 lg:grid-cols-2 gap-4"
  data-destinations={JSON.stringify(destinations)}
  data-tour-types={JSON.stringify(tourTypes)}
>
  <div>
    <label class="sr-only" for="destination">Destination</label>
    <div class="grid grid-cols-1">
      <select
        name="destination"
        id="destination"
        class="appearance-none col-start-1 row-start-1"
      >
        <option value="all">Destination</option>
        {
          destinations.map((destination) => (
            <option value={destination}>{destination}</option>
          ))
        }
      </select>
      <Icon name="chevron-down" class="icon-chevron-down" />
    </div>
  </div>
  <div>
    <label class="sr-only" for="tourType">Tour Type</label>
    <div class="grid grid-cols-1">
      <select
        name="tourType"
        id="tourType"
        class="appearance-none col-start-1 row-start-1"
      >
        <option value="all">Tour type</option>
        {tourTypes.map((type) => <option value={type}>{type}</option>)}
      </select>
      <Icon name="chevron-down" class="icon-chevron-down" />
    </div>
  </div>
  <div class="lg:col-span-2">
    <button
      type="submit"
      class="bg-yellow-200 mt-1 rounded-md py-1.5 font-semibold w-full hover:opacity-80 transition flex items-center justify-center gap-2"
    >
      <Icon name="search" class="size-5" />
      <span>Find Tours</span>
    </button>
  </div>
</form>

<script>
  document.addEventListener("astro:page-load", function () {
    const form = document.getElementById(
      "form-widget-search"
    ) as HTMLFormElement;

    if (form) {
      const submitButton = form.querySelector(
        'button[type="submit"]'
      ) as HTMLButtonElement;
      const originalButtonText = submitButton.innerHTML;

      // Handle form submission with loading state
      form.addEventListener("submit", function (e) {
        // Show loading state
        submitButton.disabled = true;
        submitButton.innerHTML = `
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Searching Tours...
        `;

        // Reset button after a delay if form doesn't navigate
        setTimeout(() => {
          submitButton.disabled = false;
          submitButton.innerHTML = originalButtonText;
        }, 5000);
      });

      // Add form validation
      const selects = form.querySelectorAll("select");
      selects.forEach((select) => {
        select.addEventListener("change", function () {
          // Remove any previous validation styling
          this.classList.remove("border-red-300");
        });
      });
    }
  });
</script>
